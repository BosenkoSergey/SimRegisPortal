@page "/users"
@inherits BaseViewPage<Guid, UserDto>

@using SimRegisPortal.Application.Features.Users.Commands
@using SimRegisPortal.Application.Features.Users.Queries

@attribute [Authorize]

<PageTitle>@PageTitle</PageTitle>

<MudPaper Class="mt-3 px-3 py-3">
    <MudDataGrid Items="_entities" @ref="_grid" Filterable Hover Dense>
        <ToolBarContent>
            <MudText Typo="Typo.h6">@PageTitle</MudText>
            <MudSpacer />
            @if (UserContext.HasPermission(UserPermissionType.UsersWrite))
            {
                <MudButton OnClick="Add" StartIcon="@Icons.Material.Filled.Add" Variant="Variant.Outlined" Class="ml-2">
                    Додати
                </MudButton>
            }
        </ToolBarContent>

        <Columns>
            <HierarchyColumn InitiallyExpandedFunc="@(x => false)" />

            <PropertyColumn Property="x => x.FullName" Title="Ім'я" />
            <PropertyColumn Property="x => x.Login" Title="Логін" />
            <PropertyColumn Property="x => x.Email" Title="Пошта" />

            <PropertyColumn Property="x => x.Status" Title="Статус">
                <CellTemplate Context="context">
                    @context.Item.Status.GetDescription()
                </CellTemplate>
            </PropertyColumn>

            <PropertyColumn Property="x => x.IsAdmin" Title="Адміністратор">
                <CellTemplate>
                    <MudCheckBox Value="@context.Item.IsAdmin" ReadOnly />
                </CellTemplate>
            </PropertyColumn>

            @if (UserContext.HasPermission(UserPermissionType.UsersWrite))
            {
                <TemplateColumn>
                    <CellTemplate Context="context">
                        <MudIconButton Icon="@Icons.Material.Outlined.Edit" OnClick="@(() => Edit(context.Item.Id))" Size="Size.Small" />
                        <MudTooltip Text="Скинути пароль">
                            <MudIconButton Icon="@Icons.Material.Filled.LockReset" OnClick="@(() => ResetPassword(context.Item.Id))" Size="Size.Small" />
                        </MudTooltip>
                    </CellTemplate>
                </TemplateColumn>
            }
        </Columns>

        <ChildRowContent>
            <MudPaper Class="px-4 py-2">
                <MudText Typo="Typo.subtitle2" Class="mb-2">Права доступу:</MudText>
                @if (context.Item.Permissions?.Count > 0)
                {
                    <MudStack Row Spacing="1" Wrap="Wrap.Wrap">
                        @foreach (var perm in context.Item.Permissions.Select(p => p.GetDescription()).OrderBy(p => p))
                        {
                            <MudChip Variant="Variant.Outlined">@perm</MudChip>
                        }
                    </MudStack>
                }
                else
                {
                    <MudText>Права доступу не призначені.</MudText>
                }
            </MudPaper>
        </ChildRowContent>

        <PagerContent>
            <MudDataGridPager />
        </PagerContent>
    </MudDataGrid>
</MudPaper>

@code {
    protected override async Task OnFirstInitializedAsync()
    {
        PageTitle = "Користувачі";
        EditPageUrl = "/user";

        CheckPermissions(UserPermissionType.UsersRead);

        await LoadEntities();
    }

    protected override IRequest<IEnumerable<UserDto>> GetCommand() =>
        new GetUsersQuery();
        
    private async Task ResetPassword(Guid id)
    {
        var confirmed = await DialogService.ShowMessageBox(
            title: "Підтвердження скидання",
            markupMessage: (MarkupString)$"Ви впевнені, що хочете надіслати новий пароль для цього користувача?",
            yesText: "Так", cancelText: "Скасувати", options: new DialogOptions { CloseButton = true });

        if (confirmed == true)
        {
            var result = await SendSafeAsync(new ResetPasswordCommand(id));
            if (result)
            {
                await Notifier.Success("Пароль скинуто.");
            }
        }
    }
}
