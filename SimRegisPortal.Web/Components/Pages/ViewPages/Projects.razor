@page "/projects"
@inherits BaseViewPage<Guid, ProjectDto>

@using SimRegisPortal.Application.Features.Companies.Queries
@using SimRegisPortal.Application.Features.Projects.Commands
@using SimRegisPortal.Application.Features.Projects.Queries

@attribute [Authorize]

<PageTitle>@PageTitle</PageTitle>

<MudPaper Class="mt-3 px-3 py-3">
    <MudDataGrid Items="_entities" @ref="_grid" Filterable Dense>
        <ToolBarContent>
            <MudText Typo="Typo.h6">@PageTitle</MudText>
            <MudSpacer />
            @if (UserContext.HasPermission(UserPermissionType.ProjectsWrite))
            {
                <MudButton OnClick="Add" StartIcon="@Icons.Material.Filled.Add" Variant="Variant.Outlined" Class="ml-2">
                    Додати
                </MudButton>
            }
        </ToolBarContent>

        <Columns>
            <PropertyColumn Property="x => x.CompanyId" Title="Компанія">
                <CellTemplate Context="context">
                    @_companies.GetValueOrDefault(context.Item.CompanyId)
                </CellTemplate>
            </PropertyColumn>

            <PropertyColumn Property="x => x.Name" Title="Назва" />
            <PropertyColumn Property="x => x.StartDate" Title="Дата початку" Format="dd.MM.yyyy" />
            <PropertyColumn Property="x => x.EndDate" Title="Дата завершення" Format="dd.MM.yyyy" />

            <PropertyColumn Property="x => x.IsInternal" Title="Внутрішній">
                <CellTemplate Context="context">
                    <MudCheckBox Value="@context.Item.IsInternal" ReadOnly />
                </CellTemplate>
            </PropertyColumn>

            <PropertyColumn Property="x => x.Description" Title="Опис" />

            @if (UserContext.HasPermission(UserPermissionType.ProjectsWrite))
            {
                <TemplateColumn>
                    <CellTemplate Context="context">
                        <MudIconButton OnClick="@(() => Edit(context.Item.Id))" Icon="@Icons.Material.Outlined.Edit" Size="Size.Small" />
                        <MudIconButton OnClick="@(() => Delete(context.Item.Id))" Icon="@Icons.Material.Filled.DeleteForever" Size="Size.Small" />
                    </CellTemplate>
                </TemplateColumn>
            }
        </Columns>

        <PagerContent>
            <MudDataGridPager />
        </PagerContent>
    </MudDataGrid>
</MudPaper>

@code {
    private Dictionary<Guid, string> _companies = new();

    protected override async Task OnFirstInitializedAsync()
    {
        PageTitle = "Проєкти";
        EditPageUrl = "/project";

        CheckPermissions(UserPermissionType.ProjectsRead);

        var companiesResult = await SendSafeAsync(new GetCompaniesLookupQuery());
        if (companiesResult.IsSuccess)
        {
            _companies = companiesResult.Value!;
        }

        await LoadEntities();
    }

    protected override IRequest<IEnumerable<ProjectDto>> GetCommand() =>
        new GetProjectsQuery();

    protected override IRequest DeleteCommand(Guid Id) =>
        new DeleteProjectCommand(Id);
}
